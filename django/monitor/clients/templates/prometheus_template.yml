{% load remove_protocol %}
global:
  scrape_interval: 15s
  scrape_timeout: 10s
  evaluation_interval: 15s

rule_files:
- /etc/prometheus/alerts/*.yml

alerting:
  alertmanagers:
  - scheme: {{ settings.ALERT_MANAGER_PROTOCOL }}
    timeout: 10s
    path_prefix: /alertmanager
    api_version: v1
    {% if server.authbasic.all %}basic_auth:
      username: {{ server.authbasic.all.0.username }}
      password: {{ server.authbasic.all.0.password }}{% endif %}
    static_configs:
    - targets:
      - {% if settings.DOMAIN == 'localhost' %}host.docker.internal{% else %}{{ settings.DOMAIN }}{% endif %}:{{ settings.ALERT_MANAGER_PORT }}

scrape_configs:

# Prometheus metrics
- job_name: prometheus_metrics
  honor_timestamps: true
  scrape_interval: 15s
  scrape_timeout: 10s
  metrics_path: /metrics
  scheme: http
  static_configs:
  - targets:
    - localhost:9090

# Alertmanager metrics
- job_name: alertmanager_metrics
  honor_timestamps: true
  scrape_interval: 15s
  scrape_timeout: 10s
  metrics_path: /alertmanager/metrics
  scheme: http
  {% if server.authbasic.all %}basic_auth:
    username: {{ server.authbasic.all.0.username }}
    password: {{ server.authbasic.all.0.password }}{% endif %}
  static_configs:
  - targets:
    - {% if settings.DOMAIN == 'localhost' %}host.docker.internal{% else %}{{ settings.DOMAIN }}{% endif %}:{{ settings.ALERT_MANAGER_PORT }}
{% if metrics %}
- job_name: metrics
  honor_timestamps: true
  scrape_interval: 15s
  scrape_timeout: 5s
  metrics_path: /metrics
  scheme: http
  static_configs:
  - targets:
    {% for metric in metrics %}- {{ metric.url|remove_protocol }}
    {% endfor %}{% endif %}
- job_name: is_service_down
  metrics_path: /probe
  scrape_interval: {{ settings.IS_SERVICE_DOWN_SCRAPE_INTERVAL }}
  params:
    module:
    - http_2xx
  static_configs:
  {% for user in users %}{% for application in user.applications.all %}{% for service in application.services.all %}{% if service.is_enabled and service.httpcode %}
  - labels:
      application: {{ application.id }}
      service: {{ service.id }}
    targets:
    - {{ service.httpcode.url }}
    {% endif %}{% if service.is_enabled and service.httpmockedcode %}
  - labels:
      application: {{ application.id }}
      service: {{ service.id }}
    targets:
    - {{ service.httpmockedcode.url }}
    {% endif %}{% endfor %}{% endfor %}{% endfor %}
  relabel_configs:
  - source_labels:
    - __address__
    target_label: __param_target
  - source_labels:
    - __param_target
    target_label: instance
  - target_label: __address__
    replacement: blackbox:9115
