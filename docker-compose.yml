version: "3.9"  # optional since v1.27.0

x-monitor: &default-app
  build: ./django
  volumes:
    - ./django/monitor/:/opt/monitor/
    - ./alertmanager/shared/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    - ./django/requirements.txt:/opt/requirements.txt:ro
  environment:
    - SECRET_KEY=${DJANGO_SECRET_KEY}
    - DOMAIN=${DOMAIN}
    - PORT=${PORT}
    - DEBUG=${DEBUG:-0}
    - WEBAUTH_USERNAME=${WEBAUTH_USERNAME}
    - WEBAUTH_PASSWORD=${WEBAUTH_PASSWORD}
    - ALERT_MANAGER_PROTOCOL=${ALERT_MANAGER_PROTOCOL:-http}
    - ALERT_MANAGER_PORT=${ALERT_MANAGER_PORT:-80}
  links:
    - alertmanager

services:
  nginx:
    container_name: monitor_nginx
    build: ./nginx
    ports:
      - "${PORT:-8000}:80"
      - "${PORT_HTTPS:-8443}:443"
    volumes:
      - ./data/log:/var/log
      - ./data/log/nginx:/var/log/nginx
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf/local/:/etc/nginx/conf.d/
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./.htpasswd:/etc/nginx/.htpasswd/.htpasswd:ro
      - ./django/monitor/staticfiles:/etc/staticfiles
      - ./docs:/docs
    links:
      - alertmanager
      - grafana
      - django
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  grafana:
    container_name: monitor_grafana
    image: grafana/grafana:8.2.0
    environment:
      - GF_INSTALL_PLUGINS=grafana-worldmap-panel 0.3.2
      - GF_SERVER_ROOT_URL=/grafana/
      - GR_SERVER_SERVE_FROM_SUB_PATH=True
    user: root
    volumes:
      - ./data/log:/var/log
      - ./data/grafana:/var/lib/grafana
  alertmanager:
    container_name: monitor_alertmanager
    image: quay.io/prometheus/alertmanager
    volumes:
      - ./alertmanager/shared/alertmanager.yml:/etc/alertmanager/alertmanager.yml
  django:
    <<: *default-app
    container_name: monitor_django
    command: "python3 manage.py runserver 0.0.0.0:8000"
  tailwind:
    <<: *default-app
    container_name: monitor_tailwind
    command: "python3 manage.py tailwind start"
    profiles:
      - dev
    ports:
      - "8383:8383"
  sphinx:
    container_name: monitor_sphinx
    build: ./sphinx
    command: "sphinx-reload /docs"
    profiles:
      - dev
    volumes:
      - ./docs:/docs
      - ./sphinx/requirements.txt:/requirements.txt
    ports:
      - "5500:5500"

volumes:
  logvolume01: {}
